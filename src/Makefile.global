#
# $Header$
#
# A Makefile.global is seen by the Makefile in the current
# directory and any Makefiles in any subdirectories (assuming
# they .include <postgres.global.mk>).  Also, if there is
# a Makefile.global in the "obj" directory it is included after.
# This allows machines to tailor Makefiles and override default
# setting when sharing a source tree between a number of
# machines.  Note that since the "obj" directories themselves
# are actually symbolic links which are stored on the serving
# machine and visible to all sharing sites, it is not possible to
# change where the "obj" directories point (without changing
# it for everyone).  You can, however, change any of the values
# below simply by altering your private copy of this Makefile
# in the "obj" directory.
#
# Note: if you change any of these defines you probably have to 
#
#	bmake clean; bmake
#
# since no dependecies are created for these. (of course you can 
# be crafty and check what files really depend on them and just remake
# those).
#

#
# Remember again, the following values may be overridden in the
# obj/Makefile.global in this directory.
#
POSTGRESDIR=	/private/devel/postgres
DATADIR=	${POSTGRESDIR}/data
PORTNAME=	ultrix4
MACHINE!=	machine
BINDIR=		${POSTGRESDIR}/bin
LIBDIR=		${POSTGRESDIR}/lib
STRIP=

# comment out CDEBUG to turn off debugging and sanity-checking
#	XXX on MIPS, use -g3 if you want to compile with -O
CDEBUG=		-g

# comment out PROFILE to disable profiling
#	XXX define on MIPS if you want to be able to use pixie.
#	    note that this disables dynamic loading!
#PROFILE=

# Comment out KRBVERS if you do not use Kerberos.
# 	Set KRBVERS to "4" for Kerberos v4, "5" for Kerberos v5.
#	XXX Edit the default Kerberos variables below!
#KRBVERS=	5

#
# Globally pass debugging flags
#
.ifdef CDEBUG
CFLAGS= ${CDEBUG}
LDFLAGS= ${CDEBUG}
.else
CFLAGS= -O -DNO_ASSERT_CHECKING
.endif

#
# Globally pass profiling flags
#
.ifdef PROFILE
CFLAGS+= ${PROFILE}
LDFLAGS+= ${PROFILE}
.endif

#
# Globally pass authentication system file locations
#	these are used in the postmaster and all libpq applications.
#
#	XXX they are also included in the backend due to modularization 
#	    weirdness in libpq...sigh.
#
#	Adjust KRBINCS and KRBLIBS to reflect where you have Kerberos
#		include files and libraries installed.
#	PG_KRB_SRVNAM is the name under which POSTGRES is registered in
#		the Kerberos database (KDC).
#	PG_KRB_SRVTAB is the location of the server's keytab file.
#
.ifdef KRBVERS
KRBINCS= -I/usr/athena/include
KRBLIBS= -L/usr/athena/lib
KRBFLAGS+= ${KRBINCS} '-DPG_KRB_SRVNAM="postgres_dbms"'
.   if ${KRBVERS} == "4"
KRBFLAGS+= -DKRB4
KRBFLAGS+= '-DPG_KRB_SRVTAB="/etc/srvtab"'
KRBLIBS+= -lkrb -ldes
.   elif ${KRBVERS} == "5"
KRBFLAGS+= -DKRB5
KRBFLAGS+= '-DPG_KRB_SRVTAB="FILE:/krb5/srvtab.postgres"'
KRBLIBS+= -lkrb5 -lcrypto -lcom_err -lisode
.   endif
.endif

#
# Globally pass PORTNAME
#
CFLAGS+= -DPORTNAME=${PORTNAME} -DPORTNAME_${PORTNAME}
