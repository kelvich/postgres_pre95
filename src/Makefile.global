#
# $Header$
#
# A Makefile.global is seen by the Makefile in the current
# directory and any Makefiles in any subdirectories (assuming
# they .include <postgres.global.mk>).  Also, if there is
# a Makefile.global in the "obj" directory it is included after.
# This allows machines to tailor Makefiles and override default
# setting when sharing a source tree between a number of
# machines.  Note that since the "obj" directories themselves
# are actually symbolic links which are stored on the serving
# machine and visible to all sharing sites, it is not possible to
# change where the "obj" directories point (without changing
# it for everyone).  You can, however, change any of the values
# below simply by altering your private copy of this Makefile
# in the "obj" directory.
#
# Note: if you change any of these defines you probably have to 
#
#	bmake clean; bmake
#
# since no dependecies are created for these. (of course you can 
# be crafty and check what files really depend on them and just remake
# those).
#

#
# == CONFIGURATION SECTION ==
#

# Following is where the tools necessary to build postgres
# get installed.
# It is necessary to have the TOOLSBINDIR, whatever that may be,
# in your PATH before attempting to bootstrap the build.  To
# bootstrap (that is, if bmake(1) is not installed on your system)
# you should cd(1) to the src/tools/bmake directory and type
#
#       make -f Makefile.boot
#
# This will install bmake(1) in the TOOLSBINDIR and supporting
# postgres configuration files in TOOLSLIBDIR.  Then you can
# go back up to the src/ directory and run "bmake".
#
TOOLSBINDIR= /usr/local/bin
TOOLSLIBDIR= /usr/local/lib

# Following are settings pertaining to the postgres build
# and installation.  The most important one is obviously
# the name of the port.

#
#  The name of the port.  Valid choices are:
#	ultrix4	-	DEC MIPS on Ultrix 4.2 or 4.3
#	sparc	-	SUN SPARC on SunOS 4.1.2 or 4.1.3
#	hpux	-	HP PA-RISC on HP-UX 8.07
#	alpha	-	DEC ALPHA AXP on OSF/1 1.3
#  Partial, untested support is provided for
#	linux	-	Intel 386/486 on Linux 0.99
#	next	-	NeXT MC680x0 on NeXTSTEP
#  but you're really taking your life into your own hands on these.
#
#  XXX	Note that you MUST set PORTNAME here so that port-dependent 
#	variables are correctly set within this file.  ./obj/Makefile.global 
#	does not take effect (for .if purposes) until after this file is
#	processed!
#
#PORTNAME=	sparc
PORTNAME=	ultrix4
#PORTNAME=	alpha
#PORTNAME=	hpux

#
# POSTGRESLOGIN is the login name of the user who gets special
# privileges within the database.  By default it is "postgres", but
# you can change it to any existing login name (such as your own 
# login if you are compiling a private version or don't have root
# access).
#
POSTGRESLOGIN=	postgres

#
# For convenience, POSTGRESDIR is where DATADIR, BINDIR, and LIBDIR 
# and other target destinations are rooted.  Of course, each of these is 
# changable separately.  This is usually "/usr/local/postgres" but may be 
# different for the postgres development team and sequoia users.
#
POSTGRESDIR=	/private/devel/postgres

#
# DATADIR specifies where the postmaster expects to find its database.
# This may be overridden by command line options or the PGDATA environment
# variable.
#
DATADIR=	${POSTGRESDIR}/data

#
# Where the postgres executables live (changeable by just putting them
# somewhere else and putting that directory in your shell PATH)
#
BINDIR=		${POSTGRESDIR}/bin

#
# Where libpq.a gets installed.  You must put it where your loader will
# look for it if you wish to use the -lpq convention.  Otherwise you
# can just put the absolute pathname to the library at the end of your
# command line.
#
LIBDIR=		${POSTGRESDIR}/lib

#
# Where the man pages (suitable for use with "man") get installed.
#
POSTMANDIR=	${POSTGRESDIR}/man

#
# Where the formatted documents (e.g., the reference manual) get installed.
#
POSTDOCDIR=	${POSTGRESDIR}/doc

#
# Where the header files necessary to build frontend programs get installed.
#
HEADERDIR=	${POSTGRESDIR}/include

#
# == END OF NORMAL CONFIGURATION SECTION ==
#

#
# MACHINE is needed for machine-dependent part of the system mk files.
#
.if (${PORTNAME} == "alpha" || ${PORTNAME} == "ultrix4")
MACHINE!=machine
.elif (${PORTNAME} == "sparc")
MACHINE=sparc
.elif (${PORTNAME} == "hpux")
MACHINE=hppa
.elif (${PORTNAME} == "linux" || ${PORTNAME} == "svr4")
MACHINE=i386
.endif
#
# FEATURES: 
# To disable a feature, comment out the entire definition
# (that is, prepend '#', don't set it to "0" or "no").
#

#
# Comment out USE_DLD if you do not use the GNU DLD package for
# dynamic loading.
#
#	XXX GNU DLD is currently only supported for the MIPS/Ultrix4 and
#	    SPARC/SunOS4 ports!
#
.if (${PORTNAME} == "ultrix4" || ${PORTNAME} == "sparc")
#USE_DLD=
.endif

#
# The default bmake rules will strip binaries while installing them.
# This line OVERRIDES the stripping option.
# You do NOT want to comment out or remove this line.
#
STRIP=

#
# Man pages don't live with sources this release (coming soon).
# This line OVERRIDES the default action of trying to install man 
# pages from the source directories (which doesn't work).
# You do NOT want to comment out or remove this line.
#
NOMAN=

#
# If this is set, then target "install" depends on "all".
#
ALLINSTALL=

#
# Comment out CDEBUG to turn off debugging and sanity-checking.
#
#	XXX on MIPS, use -g3 if you want to compile with -O
#
CDEBUG= -g

#
# Comment out PROFILE to disable profiling.
#
#	XXX define on MIPS if you want to be able to use pixie.
#	    note that this disables dynamic loading!
#
#PROFILE=

#
# Comment out OLD_MKDIR if your mkdir has the -p flag or your install
# creates all intermediate directories.
#
.if (${PORTNAME} == "sparc" || ${PORTNAME} == "hpux" || ${PORTNAME} == "linux")
OLD_MKDIR=
.endif

#
# If you plan to use Kerberos for authentication...
#
# Comment out KRBVERS if you do not use Kerberos.
# 	Set KRBVERS to "4" for Kerberos v4, "5" for Kerberos v5.
#	XXX Edit the default Kerberos variables below!
#
#KRBVERS=	5

#
# Globally pass Kerberos file locations.
#	these are used in the postmaster and all libpq applications.
#
#	Adjust KRBINCS and KRBLIBS to reflect where you have Kerberos
#		include files and libraries installed.
#	PG_KRB_SRVNAM is the name under which POSTGRES is registered in
#		the Kerberos database (KDC).
#	PG_KRB_SRVTAB is the location of the server's keytab file.
#
.ifdef KRBVERS
KRBINCS= -I/usr/athena/include
KRBLIBS= -L/usr/athena/lib
KRBFLAGS+= ${KRBINCS} '-DPG_KRB_SRVNAM="postgres_dbms"'
.   if ${KRBVERS} == "4"
KRBFLAGS+= -DKRB4
KRBFLAGS+= '-DPG_KRB_SRVTAB="/etc/srvtab"'
KRBLIBS+= -lkrb -ldes
.   elif ${KRBVERS} == "5"
KRBFLAGS+= -DKRB5
KRBFLAGS+= '-DPG_KRB_SRVTAB="FILE:/krb5/srvtab.postgres"'
KRBLIBS+= -lkrb5 -lcrypto -lcom_err -lisode
.   endif
.endif

#
# Globally pass debugging/optimization/profiling flags based
# on the options selected above.
#
.ifdef CDEBUG
CFLAGS= ${CDEBUG}
LDFLAGS= ${CDEBUG}
.else
CFLAGS= -O -DNO_ASSERT_CHECKING
.endif

.ifdef PROFILE
CFLAGS+= ${PROFILE}
LDFLAGS+= ${PROFILE}
.endif

#
# Globally pass PORTNAME
#
CFLAGS+= -DPORTNAME=${PORTNAME} -DPORTNAME_${PORTNAME}

#
# Globally pass the default TCP port for postmaster(1)
#
CFLAGS+= '-DPOSTPORT="4321"'

#
# == OTHER RANDOM CONFIGURATION ITEMS ==
#

#
# Globally define SEQUOIA for development at Berkeley and other
# Sequoia 2000 Project sites.
#
CFLAGS+= -DSEQUOIA

#
# SysV signal(2) semantics require reinstallation of signal handlers
# after being called.  These systems are SysV-like.
#
.if (${PORTNAME} == "hpux" || ${PORTNAME} == "svr4")
CFLAGS+= -DSYSV_SIGNAL
.elif (${PORTNAME} == "linux")
CFLAGS+= -D__USE_BSD_SIGNAL
.endif
