.\" XXX standard disclaimer belongs here....
.\" $Header$
.SP RETRIEVE COMMANDS 6/14/90
.XA 2 Retrieve
.uh NAME
.lp
retrieve \*- retrieve tuples from a relation
.uh SYNTAX
.lp
.b retrieve \c
[ \c
.b * \c
] [ (
.b into
relname [ archive_mode ]
|
.b portal
portal_name ) ]
.br
[
.b unique
]
.b (
[ dom_name1
.b =
] expression1 {
.b ,
[
.r dom_name \c
.i i
.b =
]
.r expression \c
.i i
}
.b )
.br
[
.b from
from_list ] 
.br
[
.b where
qual ] 
.br
[
.b "sort"
.b by
dom_name\-1
[
.b using
operator
] {
.b ,
.r dom_name\- \c
.i j
[
.b using
operator ] }
]
.uh DESCRIPTION
.lp
.b Retrieve 
will get all tuples which satisfy the qualification,
.i qual ,
compute the value of each element in the target list,
and either 
return them to an application program through a portal
or store them in a new relation.
.lp
If
.i relname
is specified, the result of the query will be stored in a new
relation with the indicated name.
If an archive specification,
.i archive_mode
of
.b light ,
.b heavy ,
or
.b none
is not specifed, then it
defaults to
.b light
archiving.
(This default may be changed at a site by the
.A DBA .)
The current user will be the owner of the new relation.
The relation will have domain names as specified in the 
res_target_list.
A relation with this name
owned by the user must not already exist.
The keyword 
.b all
can be used when it is desired to
retrieve all fields of a relation.
.lp
If no result
.i relname
is specified, then the result of the query will be
available on the specified portal
and will not be saved.
If no portal name is specified, the blank portal is used by default.
For named portals, retrieve passes data to an application
without conversion to external format.
For the blank portal, all data is converted
to external format.
Duplicate tuples are not removed when the result is
displayed through a portal
unless the optional
.b unique
tag is appended, in which case the tuples in the res_target_list
are sorted according to the sort clause and duplicates are
removed before being returned.
.lp
The
.b sort
clause allows a user to specify that he wishes the tuples sorted
according to the corresponding operator.
This operator must be a binary one returning a boolean.
Multiple sort fields are allowed and are applied from left to right.
.lp
The
.q *
indicates a transitive closure,
and \*(PP will
run the command until it produces no effect.
.uh EXAMPLE
.lp
.nf
/* Find all employees who make more than their manager */

   retrieve (e.name)
   from e, m in emp
   where e.mgr = m.name
   and e.sal > m.sal

/* Retrieve all fields for those employees who make more than
   the average salary */

   retrieve into temp (e.all)
   from e in emp
   where e.sal > avg {emp.salary}

/* retrieve employees's names sorted */

   retrieve unique (emp.name)
   sort by name using <

/* retrieve all employees's names that were valid on 1/7/85 
   in sorted order */

   retrieve (e.name)
   from e in emp[\*(lqJanuary 7 1985\*(rq]
   sort by name using <

/* construct a new relation, raise, containing 1.1 times all employee's salaries  */

   retrieve into raise (salary = 1.1 * emp.salary)
.uh "SEE ALSO"
.lp
postquel(postquel),
create(commands).
.uh BUGS
.lp
.q Archive_mode 
is not implemented in Version 2.
.lp
The code to support 
.q * 
is very buggy.

