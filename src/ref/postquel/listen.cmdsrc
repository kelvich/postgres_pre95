.\" This is -*-nroff-*-
.\" XXX standard disclaimer belongs here....
.\" $Header$
.TH "LISTEN" COMMANDS 02/12/94
.XA 2 "Listen"
.SH NAME
listen \(em listen for notification on a relation
.SH SYNOPSIS
.(l M
\fBlisten\fR relation_name
.)l
.SH DESCRIPTION
.BR listen
is used to register the current backend as a listener on the relation
.BR relation_name.
When the command 
.BI notify " relation_name"
is called either from within a rule or at the query level, the
frontend applications corresponding to the listening backends 
are notified.  When the backend process exits, this registration
is cleared.
.PP
This event notification is performed through the \*(LI protocol
and frontend application interface.  The application program 
must explicitly poll a \*(LI global variable, 
.IR PQAsyncNotifyWaiting
and call the routine
.IR PQnotifies
in order to find out the name of the class to which a given 
notification corresponds.  If this code is not included in 
the application, the event notification will be queued and 
never be processed.
.SH "SEE ALSO"
define rule(commands),
notify(commands),
retrieve(commands),
libpq.
.SH BUGS
There is no way to un-
.BR listen
except to drop the connection (restart the backend server).
.PP
The
.IR monitor (unix)
command does not poll for asynchronous events.
