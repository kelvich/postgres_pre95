/* $Header$ */
extern void set_ii_NumKeyAttributes ARGS((IndexInfo node, int value));
extern int get_ii_NumKeyAttributes ARGS((IndexInfo node));
extern void set_ii_KeyAttributeNumbers ARGS((IndexInfo node, AttributeNumberPtr value));
extern AttributeNumberPtr get_ii_KeyAttributeNumbers ARGS((IndexInfo node));
extern void set_ri_RangeTableIndex ARGS((RelationInfo node, Index value));
extern Index get_ri_RangeTableIndex ARGS((RelationInfo node));
extern void set_ri_RelationDesc ARGS((RelationInfo node, Relation value));
extern Relation get_ri_RelationDesc ARGS((RelationInfo node));
extern void set_ri_NumIndices ARGS((RelationInfo node, int value));
extern int get_ri_NumIndices ARGS((RelationInfo node));
extern void set_ri_IndexRelationDescs ARGS((RelationInfo node, RelationPtr value));
extern RelationPtr get_ri_IndexRelationDescs ARGS((RelationInfo node));
extern void set_ri_IndexRelationInfo ARGS((RelationInfo node, IndexInfoPtr value));
extern IndexInfoPtr get_ri_IndexRelationInfo ARGS((RelationInfo node));
extern void set_tc_retrieved ARGS((TupleCount node, int value));
extern int get_tc_retrieved ARGS((TupleCount node));
extern void set_tc_appended ARGS((TupleCount node, int value));
extern int get_tc_appended ARGS((TupleCount node));
extern void set_tc_deleted ARGS((TupleCount node, int value));
extern int get_tc_deleted ARGS((TupleCount node));
extern void set_tc_replaced ARGS((TupleCount node, int value));
extern int get_tc_replaced ARGS((TupleCount node));
extern void set_tc_inserted ARGS((TupleCount node, int value));
extern int get_tc_inserted ARGS((TupleCount node));
extern void set_tc_processed ARGS((TupleCount node, int value));
extern int get_tc_processed ARGS((TupleCount node));
extern void set_ttc_shouldFree ARGS((TupleTableSlot node, bool value));
extern bool get_ttc_shouldFree ARGS((TupleTableSlot node));
extern void set_ecxt_scantuple ARGS((ExprContext node, TupleTableSlot value));
extern TupleTableSlot get_ecxt_scantuple ARGS((ExprContext node));
extern void set_ecxt_scantype ARGS((ExprContext node, AttributePtr value));
extern AttributePtr get_ecxt_scantype ARGS((ExprContext node));
extern void set_ecxt_scan_buffer ARGS((ExprContext node, Buffer value));
extern Buffer get_ecxt_scan_buffer ARGS((ExprContext node));
extern void set_ecxt_innertuple ARGS((ExprContext node, TupleTableSlot value));
extern TupleTableSlot get_ecxt_innertuple ARGS((ExprContext node));
extern void set_ecxt_innertype ARGS((ExprContext node, AttributePtr value));
extern AttributePtr get_ecxt_innertype ARGS((ExprContext node));
extern void set_ecxt_inner_buffer ARGS((ExprContext node, Buffer value));
extern Buffer get_ecxt_inner_buffer ARGS((ExprContext node));
extern void set_ecxt_outertuple ARGS((ExprContext node, TupleTableSlot value));
extern TupleTableSlot get_ecxt_outertuple ARGS((ExprContext node));
extern void set_ecxt_outertype ARGS((ExprContext node, AttributePtr value));
extern AttributePtr get_ecxt_outertype ARGS((ExprContext node));
extern void set_ecxt_outer_buffer ARGS((ExprContext node, Buffer value));
extern Buffer get_ecxt_outer_buffer ARGS((ExprContext node));
extern void set_ecxt_relation ARGS((ExprContext node, Relation value));
extern Relation get_ecxt_relation ARGS((ExprContext node));
extern void set_ecxt_relid ARGS((ExprContext node, Index value));
extern Index get_ecxt_relid ARGS((ExprContext node));
extern void set_ecxt_param_list_info ARGS((ExprContext node, ParamListInfo value));
extern ParamListInfo get_ecxt_param_list_info ARGS((ExprContext node));
extern void set_jf_targetlist ARGS((JunkFilter node, List value));
extern List get_jf_targetlist ARGS((JunkFilter node));
extern void set_jf_len ARGS((JunkFilter node, int value));
extern int get_jf_len ARGS((JunkFilter node));
extern void set_jf_tupType ARGS((JunkFilter node, AttributePtr value));
extern AttributePtr get_jf_tupType ARGS((JunkFilter node));
extern void set_jf_tupValues ARGS((JunkFilter node, Pointer value));
extern Pointer get_jf_tupValues ARGS((JunkFilter node));
extern void set_jf_tupleSlot ARGS((JunkFilter node, TupleTableSlot value));
extern TupleTableSlot get_jf_tupleSlot ARGS((JunkFilter node));
extern void set_jf_econtext ARGS((JunkFilter node, ExprContext value));
extern ExprContext get_jf_econtext ARGS((JunkFilter node));
extern void set_es_direction ARGS((EState node, ScanDirection value));
extern ScanDirection get_es_direction ARGS((EState node));
extern void set_es_time ARGS((EState node, abstime value));
extern abstime get_es_time ARGS((EState node));
extern void set_es_owner ARGS((EState node, ObjectId value));
extern ObjectId get_es_owner ARGS((EState node));
extern void set_es_locks ARGS((EState node, List value));
extern List get_es_locks ARGS((EState node));
extern void set_es_subplan_info ARGS((EState node, List value));
extern List get_es_subplan_info ARGS((EState node));
extern void set_es_error_message ARGS((EState node, Name value));
extern Name get_es_error_message ARGS((EState node));
extern void set_es_range_table ARGS((EState node, List value));
extern List get_es_range_table ARGS((EState node));
extern void set_es_qualification_tuple ARGS((EState node, HeapTuple value));
extern HeapTuple get_es_qualification_tuple ARGS((EState node));
extern void set_es_qualification_tuple_id ARGS((EState node, ItemPointer value));
extern ItemPointer get_es_qualification_tuple_id ARGS((EState node));
extern void set_es_qualification_tuple_buffer ARGS((EState node, Buffer value));
extern Buffer get_es_qualification_tuple_buffer ARGS((EState node));
extern void set_es_raw_qualification_tuple ARGS((EState node, HeapTuple value));
extern HeapTuple get_es_raw_qualification_tuple ARGS((EState node));
extern void set_es_relation_relation_descriptor ARGS((EState node, Relation value));
extern Relation get_es_relation_relation_descriptor ARGS((EState node));
extern void set_es_into_relation_descriptor ARGS((EState node, Relation value));
extern Relation get_es_into_relation_descriptor ARGS((EState node));
extern void set_es_result_relation_info ARGS((EState node, RelationInfo value));
extern RelationInfo get_es_result_relation_info ARGS((EState node));
extern void set_es_tuplecount ARGS((EState node, TupleCount value));
extern TupleCount get_es_tuplecount ARGS((EState node));
extern void set_es_param_list_info ARGS((EState node, ParamListInfo value));
extern ParamListInfo get_es_param_list_info ARGS((EState node));
extern void set_es_prs2_info ARGS((EState node, Prs2EStateInfo value));
extern Prs2EStateInfo get_es_prs2_info ARGS((EState node));
extern void set_es_explain_relation ARGS((EState node, Relation value));
extern Relation get_es_explain_relation ARGS((EState node));
extern void set_es_BaseId ARGS((EState node, int value));
extern int get_es_BaseId ARGS((EState node));
extern void set_es_tupleTable ARGS((EState node, TupleTable value));
extern TupleTable get_es_tupleTable ARGS((EState node));
extern void set_es_junkFilter ARGS((EState node, JunkFilter value));
extern JunkFilter get_es_junkFilter ARGS((EState node));
extern void set_resultTmpRelDesc ARGS((ReturnState node, Relation value));
extern Relation get_resultTmpRelDesc ARGS((ReturnState node));
extern void set_hook_at_initnode ARGS((HookNode node, HookFunction value));
extern HookFunction get_hook_at_initnode ARGS((HookNode node));
extern void set_hook_pre_procnode ARGS((HookNode node, HookFunction value));
extern HookFunction get_hook_pre_procnode ARGS((HookNode node));
extern void set_hook_pre_endnode ARGS((HookNode node, HookFunction value));
extern HookFunction get_hook_pre_endnode ARGS((HookNode node));
extern void set_hook_post_initnode ARGS((HookNode node, HookFunction value));
extern HookFunction get_hook_post_initnode ARGS((HookNode node));
extern void set_hook_post_procnode ARGS((HookNode node, HookFunction value));
extern HookFunction get_hook_post_procnode ARGS((HookNode node));
extern void set_hook_post_endnode ARGS((HookNode node, HookFunction value));
extern HookFunction get_hook_post_endnode ARGS((HookNode node));
extern void set_hook_data ARGS((HookNode node, Pointer value));
extern Pointer get_hook_data ARGS((HookNode node));
extern void set_base_id ARGS((BaseNode node, int value));
extern int get_base_id ARGS((BaseNode node));
extern void set_base_parent ARGS((BaseNode node, Pointer value));
extern Pointer get_base_parent ARGS((BaseNode node));
extern void set_base_parent_state ARGS((BaseNode node, Pointer value));
extern Pointer get_base_parent_state ARGS((BaseNode node));
extern void set_base_hook ARGS((BaseNode node, HookNode value));
extern HookNode get_base_hook ARGS((BaseNode node));
extern void set_cs_OuterTuple ARGS((CommonState node, TupleTableSlot value));
extern TupleTableSlot get_cs_OuterTuple ARGS((CommonState node));
extern void set_cs_TupType ARGS((CommonState node, AttributePtr value));
extern AttributePtr get_cs_TupType ARGS((CommonState node));
extern void set_cs_TupValue ARGS((CommonState node, Pointer value));
extern Pointer get_cs_TupValue ARGS((CommonState node));
extern void set_cs_Level ARGS((CommonState node, int value));
extern int get_cs_Level ARGS((CommonState node));
extern void set_cs_ScanType ARGS((CommonState node, AttributePtr value));
extern AttributePtr get_cs_ScanType ARGS((CommonState node));
extern void set_cs_ScanAttributes ARGS((CommonState node, AttributeNumberPtr value));
extern AttributeNumberPtr get_cs_ScanAttributes ARGS((CommonState node));
extern void set_cs_NumScanAttributes ARGS((CommonState node, int value));
extern int get_cs_NumScanAttributes ARGS((CommonState node));
extern void set_cs_ResultTupleSlot ARGS((CommonState node, TupleTableSlot value));
extern TupleTableSlot get_cs_ResultTupleSlot ARGS((CommonState node));
extern void set_cs_ExprContext ARGS((CommonState node, ExprContext value));
extern ExprContext get_cs_ExprContext ARGS((CommonState node));
extern void set_ex_SatState ARGS((ExistentialState node, List value));
extern List get_ex_SatState ARGS((ExistentialState node));
extern void set_rs_Loop ARGS((ResultState node, int value));
extern int get_rs_Loop ARGS((ResultState node));
extern void set_as_whichplan ARGS((AppendState node, int value));
extern int get_as_whichplan ARGS((AppendState node));
extern void set_as_nplans ARGS((AppendState node, int value));
extern int get_as_nplans ARGS((AppendState node));
extern void set_as_initialized ARGS((AppendState node, ListPtr value));
extern ListPtr get_as_initialized ARGS((AppendState node));
extern void set_as_rtentries ARGS((AppendState node, List value));
extern List get_as_rtentries ARGS((AppendState node));
extern void set_rcs_whichSequence ARGS((RecursiveState node, int value));
extern int get_rcs_whichSequence ARGS((RecursiveState node));
extern void set_rcs_whichPlan ARGS((RecursiveState node, int value));
extern int get_rcs_whichPlan ARGS((RecursiveState node));
extern void set_rcs_numPlans ARGS((RecursiveState node, List value));
extern List get_rcs_numPlans ARGS((RecursiveState node));
extern void set_rcs_initialized ARGS((RecursiveState node, ListPtr value));
extern ListPtr get_rcs_initialized ARGS((RecursiveState node));
extern void set_rcs_rtentries ARGS((RecursiveState node, List value));
extern List get_rcs_rtentries ARGS((RecursiveState node));
extern void set_rcs_effectsNoted ARGS((RecursiveState node, bool value));
extern bool get_rcs_effectsNoted ARGS((RecursiveState node));
extern void set_rcs_tempsSwapped ARGS((RecursiveState node, bool value));
extern bool get_rcs_tempsSwapped ARGS((RecursiveState node));
extern void set_ps_whichplan ARGS((ParallelState node, int value));
extern int get_ps_whichplan ARGS((ParallelState node));
extern void set_ps_nplans ARGS((ParallelState node, int value));
extern int get_ps_nplans ARGS((ParallelState node));
extern void set_ps_initialized ARGS((ParallelState node, ListPtr value));
extern ListPtr get_ps_initialized ARGS((ParallelState node));
extern void set_ps_rtentries ARGS((ParallelState node, List value));
extern List get_ps_rtentries ARGS((ParallelState node));
extern void set_css_currentRelation ARGS((CommonScanState node, Relation value));
extern Relation get_css_currentRelation ARGS((CommonScanState node));
extern void set_css_currentScanDesc ARGS((CommonScanState node, HeapScanDesc value));
extern HeapScanDesc get_css_currentScanDesc ARGS((CommonScanState node));
extern void set_css_ruleInfo ARGS((CommonScanState node, ScanStateRuleInfo value));
extern ScanStateRuleInfo get_css_ruleInfo ARGS((CommonScanState node));
extern void set_css_ScanTupleSlot ARGS((CommonScanState node, Pointer value));
extern Pointer get_css_ScanTupleSlot ARGS((CommonScanState node));
extern void set_css_ViewTupleSlot ARGS((CommonScanState node, Pointer value));
extern Pointer get_css_ViewTupleSlot ARGS((CommonScanState node));
extern void set_ss_ProcOuterFlag ARGS((ScanState node, bool value));
extern bool get_ss_ProcOuterFlag ARGS((ScanState node));
extern void set_ss_OldRelId ARGS((ScanState node, Index value));
extern Index get_ss_OldRelId ARGS((ScanState node));
extern void set_st_whichplan ARGS((ScanTempState node, int value));
extern int get_st_whichplan ARGS((ScanTempState node));
extern void set_st_nplans ARGS((ScanTempState node, int value));
extern int get_st_nplans ARGS((ScanTempState node));
extern void set_iss_NumIndices ARGS((IndexScanState node, int value));
extern int get_iss_NumIndices ARGS((IndexScanState node));
extern void set_iss_IndexPtr ARGS((IndexScanState node, int value));
extern int get_iss_IndexPtr ARGS((IndexScanState node));
extern void set_iss_ScanKeys ARGS((IndexScanState node, ScanKeyPtr value));
extern ScanKeyPtr get_iss_ScanKeys ARGS((IndexScanState node));
extern void set_iss_NumScanKeys ARGS((IndexScanState node, IntPtr value));
extern IntPtr get_iss_NumScanKeys ARGS((IndexScanState node));
extern void set_iss_RuntimeKeyInfo ARGS((IndexScanState node, Pointer value));
extern Pointer get_iss_RuntimeKeyInfo ARGS((IndexScanState node));
extern void set_iss_RelationDescs ARGS((IndexScanState node, RelationPtr value));
extern RelationPtr get_iss_RelationDescs ARGS((IndexScanState node));
extern void set_iss_ScanDescs ARGS((IndexScanState node, IndexScanDescPtr value));
extern IndexScanDescPtr get_iss_ScanDescs ARGS((IndexScanState node));
extern void set_nl_PortalFlag ARGS((NestLoopState node, bool value));
extern bool get_nl_PortalFlag ARGS((NestLoopState node));
extern void set_mj_OSortopI ARGS((MergeJoinState node, List value));
extern List get_mj_OSortopI ARGS((MergeJoinState node));
extern void set_mj_ISortopO ARGS((MergeJoinState node, List value));
extern List get_mj_ISortopO ARGS((MergeJoinState node));
extern void set_mj_JoinState ARGS((MergeJoinState node, int value));
extern int get_mj_JoinState ARGS((MergeJoinState node));
extern void set_mj_MarkedTupleSlot ARGS((MergeJoinState node, TupleTableSlot value));
extern TupleTableSlot get_mj_MarkedTupleSlot ARGS((MergeJoinState node));
extern void set_hj_HashTable ARGS((HashJoinState node, HashJoinTable value));
extern HashJoinTable get_hj_HashTable ARGS((HashJoinState node));
extern void set_hj_CurBucket ARGS((HashJoinState node, HashBucket value));
extern HashBucket get_hj_CurBucket ARGS((HashJoinState node));
extern void set_hj_CurTuple ARGS((HashJoinState node, HeapTuple value));
extern HeapTuple get_hj_CurTuple ARGS((HashJoinState node));
extern void set_hj_NBatch ARGS((HashJoinState node, int value));
extern int get_hj_NBatch ARGS((HashJoinState node));
extern void set_hj_OuterBatches ARGS((HashJoinState node, FileP value));
extern FileP get_hj_OuterBatches ARGS((HashJoinState node));
extern void set_hj_OuterBatchPos ARGS((HashJoinState node, charPP value));
extern charPP get_hj_OuterBatchPos ARGS((HashJoinState node));
extern void set_hj_InnerBatches ARGS((HashJoinState node, FileP value));
extern FileP get_hj_InnerBatches ARGS((HashJoinState node));
extern void set_hj_InnerBatchSizes ARGS((HashJoinState node, intP value));
extern intP get_hj_InnerBatchSizes ARGS((HashJoinState node));
extern void set_hj_InnerHashKey ARGS((HashJoinState node, Var value));
extern Var get_hj_InnerHashKey ARGS((HashJoinState node));
extern void set_hj_CurBatch ARGS((HashJoinState node, int value));
extern int get_hj_CurBatch ARGS((HashJoinState node));
extern void set_hj_ReadPos ARGS((HashJoinState node, charP value));
extern charP get_hj_ReadPos ARGS((HashJoinState node));
extern void set_hj_ReadBlk ARGS((HashJoinState node, int value));
extern int get_hj_ReadBlk ARGS((HashJoinState node));
extern void set_hj_SavedTupleSlot ARGS((HashJoinState node, Pointer value));
extern Pointer get_hj_SavedTupleSlot ARGS((HashJoinState node));
extern void set_hj_TemporaryTupleSlot ARGS((HashJoinState node, Pointer value));
extern Pointer get_hj_TemporaryTupleSlot ARGS((HashJoinState node));
extern void set_mat_Flag ARGS((MaterialState node, bool value));
extern bool get_mat_Flag ARGS((MaterialState node));
extern void set_mat_TempRelation ARGS((MaterialState node, Relation value));
extern Relation get_mat_TempRelation ARGS((MaterialState node));
extern void set_sort_Flag ARGS((SortState node, bool value));
extern bool get_sort_Flag ARGS((SortState node));
extern void set_sort_Keys ARGS((SortState node, Pointer value));
extern Pointer get_sort_Keys ARGS((SortState node));
extern void set_sort_TempRelation ARGS((SortState node, Relation value));
extern Relation get_sort_TempRelation ARGS((SortState node));
extern void set_hashNBatch ARGS((HashState node, int value));
extern int get_hashNBatch ARGS((HashState node));
extern void set_hashBatches ARGS((HashState node, FileP value));
extern FileP get_hashBatches ARGS((HashState node));
extern void set_hashBatchPos ARGS((HashState node, charPP value));
extern charPP get_hashBatchPos ARGS((HashState node));
extern void set_hashBatchSizes ARGS((HashState node, intP value));
extern intP get_hashBatchSizes ARGS((HashState node));
extern void RInitIndexInfo ARGS((Pointer p));
extern IndexInfo MakeIndexInfo ARGS((int ii_NumKeyAttributes, AttributeNumberPtr ii_KeyAttributeNumbers));
extern void PrintIndexInfo ARGS((FILE *fp, IndexInfo node));
extern bool EqualIndexInfo ARGS((IndexInfo a, IndexInfo b));
extern bool CopyIndexInfo ARGS((IndexInfo from, IndexInfo *to, int alloc));
extern IndexInfo IMakeIndexInfo ARGS((int ii_NumKeyAttributes, AttributeNumberPtr ii_KeyAttributeNumbers));
extern IndexInfo RMakeIndexInfo ARGS(());
extern void RInitRelationInfo ARGS((Pointer p));
extern RelationInfo MakeRelationInfo ARGS((Index ri_RangeTableIndex, Relation ri_RelationDesc, int ri_NumIndices, RelationPtr ri_IndexRelationDescs, IndexInfoPtr ri_IndexRelationInfo));
extern void PrintRelationInfo ARGS((FILE *fp, RelationInfo node));
extern bool EqualRelationInfo ARGS((RelationInfo a, RelationInfo b));
extern bool CopyRelationInfo ARGS((RelationInfo from, RelationInfo *to, int alloc));
extern RelationInfo IMakeRelationInfo ARGS((Index ri_RangeTableIndex, Relation ri_RelationDesc, int ri_NumIndices, RelationPtr ri_IndexRelationDescs, IndexInfoPtr ri_IndexRelationInfo));
extern RelationInfo RMakeRelationInfo ARGS(());
extern void RInitTupleCount ARGS((Pointer p));
extern TupleCount MakeTupleCount ARGS((int tc_retrieved, int tc_appended, int tc_deleted, int tc_replaced, int tc_inserted, int tc_processed));
extern void PrintTupleCount ARGS((FILE *fp, TupleCount node));
extern bool EqualTupleCount ARGS((TupleCount a, TupleCount b));
extern bool CopyTupleCount ARGS((TupleCount from, TupleCount *to, int alloc));
extern TupleCount IMakeTupleCount ARGS((int tc_retrieved, int tc_appended, int tc_deleted, int tc_replaced, int tc_inserted, int tc_processed));
extern TupleCount RMakeTupleCount ARGS(());
extern void RInitTupleTableSlot ARGS((Pointer p));
extern TupleTableSlot MakeTupleTableSlot ARGS((bool ttc_shouldFree));
extern void PrintTupleTableSlot ARGS((FILE *fp, TupleTableSlot node));
extern bool EqualTupleTableSlot ARGS((TupleTableSlot a, TupleTableSlot b));
extern bool CopyTupleTableSlot ARGS((TupleTableSlot from, TupleTableSlot *to, int alloc));
extern TupleTableSlot IMakeTupleTableSlot ARGS((bool ttc_shouldFree));
extern TupleTableSlot RMakeTupleTableSlot ARGS(());
extern void RInitExprContext ARGS((Pointer p));
extern ExprContext MakeExprContext ARGS((TupleTableSlot ecxt_scantuple, AttributePtr ecxt_scantype, Buffer ecxt_scan_buffer, TupleTableSlot ecxt_innertuple, AttributePtr ecxt_innertype, Buffer ecxt_inner_buffer, TupleTableSlot ecxt_outertuple, AttributePtr ecxt_outertype, Buffer ecxt_outer_buffer, Relation ecxt_relation, Index ecxt_relid, ParamListInfo ecxt_param_list_info));
extern void PrintExprContext ARGS((FILE *fp, ExprContext node));
extern bool EqualExprContext ARGS((ExprContext a, ExprContext b));
extern bool CopyExprContext ARGS((ExprContext from, ExprContext *to, int alloc));
extern ExprContext IMakeExprContext ARGS((TupleTableSlot ecxt_scantuple, AttributePtr ecxt_scantype, Buffer ecxt_scan_buffer, TupleTableSlot ecxt_innertuple, AttributePtr ecxt_innertype, Buffer ecxt_inner_buffer, TupleTableSlot ecxt_outertuple, AttributePtr ecxt_outertype, Buffer ecxt_outer_buffer, Relation ecxt_relation, Index ecxt_relid, ParamListInfo ecxt_param_list_info));
extern ExprContext RMakeExprContext ARGS(());
extern void RInitJunkFilter ARGS((Pointer p));
extern JunkFilter MakeJunkFilter ARGS((List jf_targetlist, int jf_len, AttributePtr jf_tupType, Pointer jf_tupValues, TupleTableSlot jf_tupleSlot, ExprContext jf_econtext));
extern void PrintJunkFilter ARGS((FILE *fp, JunkFilter node));
extern bool EqualJunkFilter ARGS((JunkFilter a, JunkFilter b));
extern bool CopyJunkFilter ARGS((JunkFilter from, JunkFilter *to, int alloc));
extern JunkFilter IMakeJunkFilter ARGS((List jf_targetlist, int jf_len, AttributePtr jf_tupType, Pointer jf_tupValues, TupleTableSlot jf_tupleSlot, ExprContext jf_econtext));
extern JunkFilter RMakeJunkFilter ARGS(());
extern void RInitEState ARGS((Pointer p));
extern EState MakeEState ARGS((ScanDirection es_direction, abstime es_time, ObjectId es_owner, List es_locks, List es_subplan_info, Name es_error_message, List es_range_table, HeapTuple es_qualification_tuple, ItemPointer es_qualification_tuple_id, Buffer es_qualification_tuple_buffer, HeapTuple es_raw_qualification_tuple, Relation es_relation_relation_descriptor, Relation es_into_relation_descriptor, RelationInfo es_result_relation_info, TupleCount es_tuplecount, ParamListInfo es_param_list_info, Prs2EStateInfo es_prs2_info, Relation es_explain_relation, int es_BaseId, TupleTable es_tupleTable, JunkFilter es_junkFilter));
extern void PrintEState ARGS((FILE *fp, EState node));
extern bool EqualEState ARGS((EState a, EState b));
extern bool CopyEState ARGS((EState from, EState *to, int alloc));
extern EState IMakeEState ARGS((ScanDirection es_direction, abstime es_time, ObjectId es_owner, List es_locks, List es_subplan_info, Name es_error_message, List es_range_table, HeapTuple es_qualification_tuple, ItemPointer es_qualification_tuple_id, Buffer es_qualification_tuple_buffer, HeapTuple es_raw_qualification_tuple, Relation es_relation_relation_descriptor, Relation es_into_relation_descriptor, RelationInfo es_result_relation_info, TupleCount es_tuplecount, ParamListInfo es_param_list_info, Prs2EStateInfo es_prs2_info, Relation es_explain_relation, int es_BaseId, TupleTable es_tupleTable, JunkFilter es_junkFilter));
extern EState RMakeEState ARGS(());
extern void RInitReturnState ARGS((Pointer p));
extern ReturnState MakeReturnState ARGS((Relation resultTmpRelDesc));
extern void PrintReturnState ARGS((FILE *fp, ReturnState node));
extern bool EqualReturnState ARGS((ReturnState a, ReturnState b));
extern bool CopyReturnState ARGS((ReturnState from, ReturnState *to, int alloc));
extern ReturnState IMakeReturnState ARGS((Relation resultTmpRelDesc));
extern ReturnState RMakeReturnState ARGS(());
extern void RInitHookNode ARGS((Pointer p));
extern HookNode MakeHookNode ARGS((HookFunction hook_at_initnode, HookFunction hook_pre_procnode, HookFunction hook_pre_endnode, HookFunction hook_post_initnode, HookFunction hook_post_procnode, HookFunction hook_post_endnode, Pointer hook_data));
extern void PrintHookNode ARGS((FILE *fp, HookNode node));
extern bool EqualHookNode ARGS((HookNode a, HookNode b));
extern bool CopyHookNode ARGS((HookNode from, HookNode *to, int alloc));
extern HookNode IMakeHookNode ARGS((HookFunction hook_at_initnode, HookFunction hook_pre_procnode, HookFunction hook_pre_endnode, HookFunction hook_post_initnode, HookFunction hook_post_procnode, HookFunction hook_post_endnode, Pointer hook_data));
extern HookNode RMakeHookNode ARGS(());
extern void RInitBaseNode ARGS((Pointer p));
extern BaseNode MakeBaseNode ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook));
extern void PrintBaseNode ARGS((FILE *fp, BaseNode node));
extern bool EqualBaseNode ARGS((BaseNode a, BaseNode b));
extern bool CopyBaseNode ARGS((BaseNode from, BaseNode *to, int alloc));
extern BaseNode IMakeBaseNode ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook));
extern BaseNode RMakeBaseNode ARGS(());
extern void RInitCommonState ARGS((Pointer p));
extern CommonState MakeCommonState ARGS((TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext));
extern void PrintCommonState ARGS((FILE *fp, CommonState node));
extern bool EqualCommonState ARGS((CommonState a, CommonState b));
extern bool CopyCommonState ARGS((CommonState from, CommonState *to, int alloc));
extern CommonState IMakeCommonState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext));
extern CommonState RMakeCommonState ARGS(());
extern void RInitExistentialState ARGS((Pointer p));
extern ExistentialState MakeExistentialState ARGS((List ex_SatState));
extern void PrintExistentialState ARGS((FILE *fp, ExistentialState node));
extern bool EqualExistentialState ARGS((ExistentialState a, ExistentialState b));
extern bool CopyExistentialState ARGS((ExistentialState from, ExistentialState *to, int alloc));
extern ExistentialState IMakeExistentialState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, List ex_SatState));
extern ExistentialState RMakeExistentialState ARGS(());
extern void RInitResultState ARGS((Pointer p));
extern ResultState MakeResultState ARGS((int rs_Loop));
extern void PrintResultState ARGS((FILE *fp, ResultState node));
extern bool EqualResultState ARGS((ResultState a, ResultState b));
extern bool CopyResultState ARGS((ResultState from, ResultState *to, int alloc));
extern ResultState IMakeResultState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, int rs_Loop));
extern ResultState RMakeResultState ARGS(());
extern void RInitAppendState ARGS((Pointer p));
extern AppendState MakeAppendState ARGS((int as_whichplan, int as_nplans, ListPtr as_initialized, List as_rtentries));
extern void PrintAppendState ARGS((FILE *fp, AppendState node));
extern bool EqualAppendState ARGS((AppendState a, AppendState b));
extern bool CopyAppendState ARGS((AppendState from, AppendState *to, int alloc));
extern AppendState IMakeAppendState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, int as_whichplan, int as_nplans, ListPtr as_initialized, List as_rtentries));
extern AppendState RMakeAppendState ARGS(());
extern void RInitRecursiveState ARGS((Pointer p));
extern RecursiveState MakeRecursiveState ARGS((int rcs_whichSequence, int rcs_whichPlan, List rcs_numPlans, ListPtr rcs_initialized, List rcs_rtentries, bool rcs_effectsNoted, bool rcs_tempsSwapped));
extern void PrintRecursiveState ARGS((FILE *fp, RecursiveState node));
extern bool EqualRecursiveState ARGS((RecursiveState a, RecursiveState b));
extern bool CopyRecursiveState ARGS((RecursiveState from, RecursiveState *to, int alloc));
extern RecursiveState IMakeRecursiveState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, int rcs_whichSequence, int rcs_whichPlan, List rcs_numPlans, ListPtr rcs_initialized, List rcs_rtentries, bool rcs_effectsNoted, bool rcs_tempsSwapped));
extern RecursiveState RMakeRecursiveState ARGS(());
extern void RInitParallelState ARGS((Pointer p));
extern ParallelState MakeParallelState ARGS((int ps_whichplan, int ps_nplans, ListPtr ps_initialized, List ps_rtentries));
extern void PrintParallelState ARGS((FILE *fp, ParallelState node));
extern bool EqualParallelState ARGS((ParallelState a, ParallelState b));
extern bool CopyParallelState ARGS((ParallelState from, ParallelState *to, int alloc));
extern ParallelState IMakeParallelState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, int ps_whichplan, int ps_nplans, ListPtr ps_initialized, List ps_rtentries));
extern ParallelState RMakeParallelState ARGS(());
extern void RInitCommonScanState ARGS((Pointer p));
extern CommonScanState MakeCommonScanState ARGS((Relation css_currentRelation, HeapScanDesc css_currentScanDesc, ScanStateRuleInfo css_ruleInfo, Pointer css_ScanTupleSlot, Pointer css_ViewTupleSlot));
extern void PrintCommonScanState ARGS((FILE *fp, CommonScanState node));
extern bool EqualCommonScanState ARGS((CommonScanState a, CommonScanState b));
extern bool CopyCommonScanState ARGS((CommonScanState from, CommonScanState *to, int alloc));
extern CommonScanState IMakeCommonScanState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, Relation css_currentRelation, HeapScanDesc css_currentScanDesc, ScanStateRuleInfo css_ruleInfo, Pointer css_ScanTupleSlot, Pointer css_ViewTupleSlot));
extern CommonScanState RMakeCommonScanState ARGS(());
extern void RInitScanState ARGS((Pointer p));
extern ScanState MakeScanState ARGS((bool ss_ProcOuterFlag, Index ss_OldRelId));
extern void PrintScanState ARGS((FILE *fp, ScanState node));
extern bool EqualScanState ARGS((ScanState a, ScanState b));
extern bool CopyScanState ARGS((ScanState from, ScanState *to, int alloc));
extern ScanState IMakeScanState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, Relation css_currentRelation, HeapScanDesc css_currentScanDesc, ScanStateRuleInfo css_ruleInfo, Pointer css_ScanTupleSlot, Pointer css_ViewTupleSlot, bool ss_ProcOuterFlag, Index ss_OldRelId));
extern ScanState RMakeScanState ARGS(());
extern void RInitScanTempState ARGS((Pointer p));
extern ScanTempState MakeScanTempState ARGS((int st_whichplan, int st_nplans));
extern void PrintScanTempState ARGS((FILE *fp, ScanTempState node));
extern bool EqualScanTempState ARGS((ScanTempState a, ScanTempState b));
extern bool CopyScanTempState ARGS((ScanTempState from, ScanTempState *to, int alloc));
extern ScanTempState IMakeScanTempState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, Relation css_currentRelation, HeapScanDesc css_currentScanDesc, ScanStateRuleInfo css_ruleInfo, Pointer css_ScanTupleSlot, Pointer css_ViewTupleSlot, int st_whichplan, int st_nplans));
extern ScanTempState RMakeScanTempState ARGS(());
extern void RInitIndexScanState ARGS((Pointer p));
extern IndexScanState MakeIndexScanState ARGS((int iss_NumIndices, int iss_IndexPtr, ScanKeyPtr iss_ScanKeys, IntPtr iss_NumScanKeys, Pointer iss_RuntimeKeyInfo, RelationPtr iss_RelationDescs, IndexScanDescPtr iss_ScanDescs));
extern void PrintIndexScanState ARGS((FILE *fp, IndexScanState node));
extern bool EqualIndexScanState ARGS((IndexScanState a, IndexScanState b));
extern bool CopyIndexScanState ARGS((IndexScanState from, IndexScanState *to, int alloc));
extern IndexScanState IMakeIndexScanState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, int iss_NumIndices, int iss_IndexPtr, ScanKeyPtr iss_ScanKeys, IntPtr iss_NumScanKeys, Pointer iss_RuntimeKeyInfo, RelationPtr iss_RelationDescs, IndexScanDescPtr iss_ScanDescs));
extern IndexScanState RMakeIndexScanState ARGS(());
extern void RInitJoinState ARGS((Pointer p));
extern JoinState MakeJoinState ARGS((int iss_NumIndices));
extern void PrintJoinState ARGS((FILE *fp, JoinState node));
extern bool EqualJoinState ARGS((JoinState a, JoinState b));
extern bool CopyJoinState ARGS((JoinState from, JoinState *to, int alloc));
extern JoinState IMakeJoinState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext));
extern JoinState RMakeJoinState ARGS(());
extern void RInitNestLoopState ARGS((Pointer p));
extern NestLoopState MakeNestLoopState ARGS((bool nl_PortalFlag));
extern void PrintNestLoopState ARGS((FILE *fp, NestLoopState node));
extern bool EqualNestLoopState ARGS((NestLoopState a, NestLoopState b));
extern bool CopyNestLoopState ARGS((NestLoopState from, NestLoopState *to, int alloc));
extern NestLoopState IMakeNestLoopState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, bool nl_PortalFlag));
extern NestLoopState RMakeNestLoopState ARGS(());
extern void RInitMergeJoinState ARGS((Pointer p));
extern MergeJoinState MakeMergeJoinState ARGS((List mj_OSortopI, List mj_ISortopO, int mj_JoinState, TupleTableSlot mj_MarkedTupleSlot));
extern void PrintMergeJoinState ARGS((FILE *fp, MergeJoinState node));
extern bool EqualMergeJoinState ARGS((MergeJoinState a, MergeJoinState b));
extern bool CopyMergeJoinState ARGS((MergeJoinState from, MergeJoinState *to, int alloc));
extern MergeJoinState IMakeMergeJoinState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, List mj_OSortopI, List mj_ISortopO, int mj_JoinState, TupleTableSlot mj_MarkedTupleSlot));
extern MergeJoinState RMakeMergeJoinState ARGS(());
extern void RInitHashJoinState ARGS((Pointer p));
extern HashJoinState MakeHashJoinState ARGS((HashJoinTable hj_HashTable, HashBucket hj_CurBucket, HeapTuple hj_CurTuple, int hj_NBatch, FileP hj_OuterBatches, charPP hj_OuterBatchPos, FileP hj_InnerBatches, intP hj_InnerBatchSizes, Var hj_InnerHashKey, int hj_CurBatch, charP hj_ReadPos, int hj_ReadBlk, Pointer hj_SavedTupleSlot, Pointer hj_TemporaryTupleSlot));
extern void PrintHashJoinState ARGS((FILE *fp, HashJoinState node));
extern bool EqualHashJoinState ARGS((HashJoinState a, HashJoinState b));
extern bool CopyHashJoinState ARGS((HashJoinState from, HashJoinState *to, int alloc));
extern HashJoinState IMakeHashJoinState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, HashJoinTable hj_HashTable, HashBucket hj_CurBucket, HeapTuple hj_CurTuple, int hj_NBatch, FileP hj_OuterBatches, charPP hj_OuterBatchPos, FileP hj_InnerBatches, intP hj_InnerBatchSizes, Var hj_InnerHashKey, int hj_CurBatch, charP hj_ReadPos, int hj_ReadBlk, Pointer hj_SavedTupleSlot, Pointer hj_TemporaryTupleSlot));
extern HashJoinState RMakeHashJoinState ARGS(());
extern void RInitMaterialState ARGS((Pointer p));
extern MaterialState MakeMaterialState ARGS((bool mat_Flag, Relation mat_TempRelation));
extern void PrintMaterialState ARGS((FILE *fp, MaterialState node));
extern bool EqualMaterialState ARGS((MaterialState a, MaterialState b));
extern bool CopyMaterialState ARGS((MaterialState from, MaterialState *to, int alloc));
extern MaterialState IMakeMaterialState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, Relation css_currentRelation, HeapScanDesc css_currentScanDesc, ScanStateRuleInfo css_ruleInfo, Pointer css_ScanTupleSlot, Pointer css_ViewTupleSlot, bool mat_Flag, Relation mat_TempRelation));
extern MaterialState RMakeMaterialState ARGS(());
extern void RInitSortState ARGS((Pointer p));
extern SortState MakeSortState ARGS((bool sort_Flag, Pointer sort_Keys, Relation sort_TempRelation));
extern void PrintSortState ARGS((FILE *fp, SortState node));
extern bool EqualSortState ARGS((SortState a, SortState b));
extern bool CopySortState ARGS((SortState from, SortState *to, int alloc));
extern SortState IMakeSortState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, Relation css_currentRelation, HeapScanDesc css_currentScanDesc, ScanStateRuleInfo css_ruleInfo, Pointer css_ScanTupleSlot, Pointer css_ViewTupleSlot, bool sort_Flag, Pointer sort_Keys, Relation sort_TempRelation));
extern SortState RMakeSortState ARGS(());
extern void RInitUniqueState ARGS((Pointer p));
extern UniqueState MakeUniqueState ARGS((int sort_Flag));
extern void PrintUniqueState ARGS((FILE *fp, UniqueState node));
extern bool EqualUniqueState ARGS((UniqueState a, UniqueState b));
extern bool CopyUniqueState ARGS((UniqueState from, UniqueState *to, int alloc));
extern UniqueState IMakeUniqueState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext));
extern UniqueState RMakeUniqueState ARGS(());
extern void RInitHashState ARGS((Pointer p));
extern HashState MakeHashState ARGS((int hashNBatch, FileP hashBatches, charPP hashBatchPos, intP hashBatchSizes));
extern void PrintHashState ARGS((FILE *fp, HashState node));
extern bool EqualHashState ARGS((HashState a, HashState b));
extern bool CopyHashState ARGS((HashState from, HashState *to, int alloc));
extern HashState IMakeHashState ARGS((int base_id, Pointer base_parent, Pointer base_parent_state, HookNode base_hook, TupleTableSlot cs_OuterTuple, AttributePtr cs_TupType, Pointer cs_TupValue, int cs_Level, AttributePtr cs_ScanType, AttributeNumberPtr cs_ScanAttributes, int cs_NumScanAttributes, TupleTableSlot cs_ResultTupleSlot, ExprContext cs_ExprContext, int hashNBatch, FileP hashBatches, charPP hashBatchPos, intP hashBatchSizes));
extern HashState RMakeHashState ARGS(());
