/* $Header$ */

extern void set_cost ARGS((Plan node, Cost value));
extern Cost get_cost ARGS((Plan node));
extern void set_fragment ARGS((Plan node, Index value));
extern Index get_fragment ARGS((Plan node));
extern void set_state ARGS((Plan node, struct EState *value));
extern struct EState *get_state ARGS((Plan node));
extern void set_qptargetlist ARGS((Plan node, List value));
extern List get_qptargetlist ARGS((Plan node));
extern void set_qpqual ARGS((Plan node, List value));
extern List get_qpqual ARGS((Plan node));
extern void set_lefttree ARGS((Plan node, struct Plan *value));
extern Plan get_lefttree ARGS((Plan node));
extern void set_righttree ARGS((Plan node, struct Plan *value));
extern Plan get_righttree ARGS((Plan node));
extern void set_resrellevelqual ARGS((Result node, List value));
extern List get_resrellevelqual ARGS((Result node));
extern void set_resconstantqual ARGS((Result node, List value));
extern List get_resconstantqual ARGS((Result node));
extern void set_unionplans ARGS((Append node, List value));
extern List get_unionplans ARGS((Append node));
extern void set_unionrelid ARGS((Append node, Index value));
extern Index get_unionrelid ARGS((Append node));
extern void set_unionrtentries ARGS((Append node, List value));
extern List get_unionrtentries ARGS((Append node));
extern void set_mergeclauses ARGS((MergeSort node, List value));
extern List get_mergeclauses ARGS((MergeSort node));
extern void set_mergesortop ARGS((MergeSort node, ObjectId value));
extern ObjectId get_mergesortop ARGS((MergeSort node));
extern void set_hashclauses ARGS((HashJoin node, List value));
extern List get_hashclauses ARGS((HashJoin node));
extern void set_hashjoinop ARGS((HashJoin node, ObjectId value));
extern ObjectId get_hashjoinop ARGS((HashJoin node));
extern void set_scanrelid ARGS((Scan node, Index value));
extern Index get_scanrelid ARGS((Scan node));
extern void set_indxid ARGS((IndexScan node, List value));
extern List get_indxid ARGS((IndexScan node));
extern void set_indxqual ARGS((IndexScan node, List value));
extern List get_indxqual ARGS((IndexScan node));
extern void set_tempid ARGS((Temp node, ObjectId value));
extern ObjectId get_tempid ARGS((Temp node));
extern void set_keycount ARGS((Temp node, Count value));
extern Count get_keycount ARGS((Temp node));
extern Plan MakePlan ARGS((int cost, int fragment, int EState, int qptargetlist, int qpqual, int Plan, int Plan));
extern Existential MakeExistential ARGS((int cost));
extern Result MakeResult ARGS((List resrellevelqual, List resconstantqual));
extern Append MakeAppend ARGS((List unionplans, Index unionrelid, List unionrtentries));
extern Join MakeJoin ARGS((int unionplans));
extern NestLoop MakeNestLoop ARGS((int unionplans));
extern MergeSort MakeMergeSort ARGS((List mergeclauses, ObjectId mergesortop));
extern HashJoin MakeHashJoin ARGS((List hashclauses, ObjectId hashjoinop));
extern Scan MakeScan ARGS((Index scanrelid));
extern SeqScan MakeSeqScan ARGS((int scanrelid));
extern IndexScan MakeIndexScan ARGS((List indxid, List indxqual));
extern Temp MakeTemp ARGS((Count keycoun tempid, int keycount));
extern Sort MakeSort ARGS((int tempid));
extern Hash MakeHash ARGS((int tempid));
